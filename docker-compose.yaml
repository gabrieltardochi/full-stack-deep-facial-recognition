version: "3"
services:
  facial-regocnition-s3:
    container_name: facial-regocnition-s3
    image: minio/minio:RELEASE.2023-09-16T01-01-47Z
    environment:
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY}
      - MINIO_SECRET_KEY=${S3_SECRET_KEY}
    volumes:
      - facial-regocnition-s3-volume:/s3-data
    command: minio server /s3-data --address :9000 --console-address :9001
    ports:
      - ${S3_API_PORT}:9000
      - ${S3_CONSOLE_PORT}:9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - facial-regocnition-network

  facial-regocnition-s3-create-bucket:
    container_name: facial-regocnition-s3-create-bucket
    image: minio/mc:RELEASE.2023-09-13T23-08-58Z
    environment:
    - MINIO_ACCESS_KEY=${S3_ACCESS_KEY}
    - MINIO_SECRET_KEY=${S3_SECRET_KEY}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://facial-regocnition-s3:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb --ignore-existing myminio/facial-recognition-bucket;
      exit 0;
      "
    depends_on:
      - facial-regocnition-s3
    networks:
      - facial-regocnition-network

networks:
  facial-regocnition-network:
    name: facial-regocnition-network

volumes:
  facial-regocnition-s3-volume:
    name: facial-regocnition-s3-volume
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './s3-data'